{"version":3,"file":"static/js/919.73f6dd7a.chunk.js","mappings":"mJACA,QAA4B,sCAA5B,EAA0E,kCAA1E,EAAmH,iC,cCAnH,SAAgB,MAAQ,kCAAkC,KAAO,iCAAiC,KAAO,iCAAiC,OAAS,mCAAmC,MAAQ,kCAAkC,IAAM,gCAAgC,MAAQ,kCAAkC,UAAY,sCAAsC,UAAY,sCAAsC,QAAU,oCAAoC,WAAa,uCAAuC,WAAa,uCAAuC,aAAe,0C,+DCKzjB,MA0JA,EA1J2BA,IAAmE,IAAlE,kBAAEC,EAAiB,gBAAEC,EAAe,qBAAEC,GAAsBH,EACtF,MAAMI,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,IAC1BC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,KAEvBC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,CACjCC,MAAO,GACPC,IAAK,GACLC,SAAU,GACVC,eAAgB,MAEZ,MAAEH,EAAK,IAAEC,EAAG,SAAEC,EAAQ,eAAEC,GAAmBN,GAC1CO,EAAaC,IAAkBN,EAAAA,EAAAA,WAAS,IACxCO,EAAmBC,IAAwBR,EAAAA,EAAAA,WAAS,GAErDS,EAAeC,IACnB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAEG,OAC1Bd,GAASe,IAAS,IACbA,EACH,CAACH,GAAOC,KACP,EAeCG,EAAkC,KAAfb,EAAIc,OACvBC,EACJhB,EAAMe,QAAU,GAAKf,EAAMiB,MAAM,IAAIC,SAAS,KAAOlB,EAAMiB,MAAM,IAAIC,SAAS,KAC1EC,EAAkBjB,EAASa,QAAU,EACrCK,EAAwBjB,EAAeY,QAAU,EACjDM,EACJ1B,GAAawB,GAAmBC,GAAyBlB,IAAaC,EACxE,OACEmB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAEC,MAAMH,SAAA,EACpBhC,IAAeoC,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAEG,KAAKL,SAAC,mDACvCF,EAAAA,EAAAA,MAAA,QAAMQ,SAxBUrB,IACpBA,EAAEsB,iBACF1C,EAAkBW,EAAM,EAsBWyB,UAAWC,EAAEM,KAAKR,SAAA,EAC/CI,EAAAA,EAAAA,KAAA,SACEK,SAAUzB,EACViB,UAAWC,EAAEQ,UACbC,GAAG,QACHC,KAAK,OACL1B,KAAK,QACLC,MAAOX,EACPqC,UAAQ,EACR,aAAW,IACXC,YAAY,8BACZC,MAAM,uEAERX,EAAAA,EAAAA,KAAA,UAAQQ,KAAK,SAASI,UAAWxB,EAAYS,UAAWC,EAAEe,IAAIjB,SAAC,gBAIhEhC,IAAeoC,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAEgB,OAAOlB,SAAC,6CAEzChC,IACC8B,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAEC,MAAMH,SAAA,EACtBF,EAAAA,EAAAA,MAAA,QAAMQ,SAzCMrB,IAClBA,EAAEsB,iBACFzC,EAAgBW,EAAI,EAuCewB,UAAWC,EAAEM,KAAKR,SAAA,EAC7CI,EAAAA,EAAAA,KAAA,SACEK,SAAUzB,EACViB,UAAWC,EAAEQ,UACbC,GAAG,MACHC,KAAK,OACL1B,KAAK,MACLC,MAAOV,EACPoC,UAAQ,EACRE,MAAM,4CACND,YAAY,6CAEdV,EAAAA,EAAAA,KAAA,UAAQQ,KAAK,SAASI,SAAU1B,EAAkBW,UAAWC,EAAEe,IAAIjB,SAAC,iBAIrE7B,IAAaiC,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAEgB,OAAOlB,SAAC,mCAGzC7B,IACC2B,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAEC,MAAMH,SAAA,EACtBF,EAAAA,EAAAA,MAAA,QAAMQ,SA1DWrB,IACvBA,EAAEsB,iBACFxC,EAAqBW,EAAS,EAwDUuB,UAAWC,EAAEM,KAAKR,SAAA,EAClDF,EAAAA,EAAAA,MAAA,SAAOG,UAAWC,EAAEiB,MAAOC,QAAQ,WAAUpB,SAAA,EAC3CI,EAAAA,EAAAA,KAAA,SACEK,SAAUzB,EACV2B,GAAG,WACHzB,KAAK,WACLC,MAAOT,EACPuB,UAAWC,EAAEQ,UAAY,IAAMR,EAAEmB,UACjCT,KAAMhC,EAAc,OAAS,WAC7BmC,MAAM,2DACND,YAAY,iBACZ,aAAW,IACXD,UAAQ,KAEVT,EAAAA,EAAAA,KAAA,UACEH,UAAWC,EAAEoB,WACbC,QAASA,KACP1C,GAAgBD,EAAY,EAE9BgC,KAAK,SAAQZ,UAEbI,EAAAA,EAAAA,KAAA,OACEH,UAAWC,EAAEsB,WACbC,IAAK7C,EAAc8C,EAAAA,EAAYC,EAAAA,EAC/BC,IAAI,oCAIV9B,EAAAA,EAAAA,MAAA,SAAOG,UAAWC,EAAEiB,MAAOC,QAAQ,iBAAgBpB,SAAA,EACjDI,EAAAA,EAAAA,KAAA,SACEK,SAAUzB,EACV2B,GAAG,iBACHzB,KAAK,iBACLC,MAAOR,EACPsB,UAAWC,EAAEQ,UAAY,IAAMR,EAAEmB,UACjCT,KAAM9B,EAAoB,OAAS,WACnCiC,MAAM,4DACND,YAAY,wBACZ,aAAW,IACXD,UAAQ,KAEVT,EAAAA,EAAAA,KAAA,UACEH,UAAWC,EAAEoB,WACbC,QAASA,KACPxC,GAAsBD,EAAkB,EAE1C8B,KAAK,SAAQZ,UAEbI,EAAAA,EAAAA,KAAA,OACEH,UAAWC,EAAEsB,WACbC,IAAK3C,EAAoB4C,EAAAA,EAAYC,EAAAA,EACrCC,IAAI,oCAKVxB,EAAAA,EAAAA,KAAA,UAAQQ,KAAK,SAASI,SAAUnB,EAAcI,UAAWC,EAAEe,IAAIjB,SAAC,qBAIjEH,IAAgBO,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAE2B,MAAM7B,SAAC,8CAG3C,E,4CClJP,MAuCA,EAvC2B8B,KACzB,MAAMC,GAAiB9D,EAAAA,EAAAA,IAAY+D,EAAAA,IAC7BC,GAAYhE,EAAAA,EAAAA,IAAYiE,EAAAA,GACxBC,GAAelE,EAAAA,EAAAA,IAAYmE,EAAAA,IAE3BC,GAAWC,EAAAA,EAAAA,MAUjB,OACExC,EAAAA,EAAAA,MAAA,QAAAE,SAAA,EACEI,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAYF,SACzBiC,GACC7B,EAAAA,EAAAA,KAACmC,EAAAA,GAAM,KAEPzC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEI,EAAAA,EAAAA,KAACoC,EAAAA,GAAI,CAACC,GAAG,SAAQzC,UACfI,EAAAA,EAAAA,KAACsC,EAAAA,EAAS,CAACzC,UAAWC,OAExBE,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAQF,SAAC,qBACxBI,EAAAA,EAAAA,KAACuC,EAAkB,CACjB9E,kBArBMW,IAChB6D,GAASO,EAAAA,EAAAA,IAAiBpE,GAAO,EAqBvBV,gBAnBWW,IACrB4D,GAASQ,EAAAA,EAAAA,IAAapE,GAAK,EAmBjBV,qBAjBcW,IACxB2D,GAASS,EAAAA,EAAAA,IAAgB,CAAEpE,WAAUF,MAAO2D,IAAgB,SAqBzDJ,IAAkB3B,EAAAA,EAAAA,KAAC2C,EAAAA,GAAQ,CAACN,GAAG,aAC3B,C","sources":["webpack://slim-mom-frontend/./src/pages/ForgotPasswordPage/ForgotPasswordPage.module.css?f1b2","webpack://slim-mom-frontend/./src/components/ForgotPasswordForm/ForgotPasswordForm.module.css?0487","components/ForgotPasswordForm/ForgotPasswordForm.jsx","pages/ForgotPasswordPage/ForgotPasswordPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ForgotPasswordPage_container__Z-X75\",\"title\":\"ForgotPasswordPage_title__OcH8+\",\"icon\":\"ForgotPasswordPage_icon__e0nN9\"};","// extracted by mini-css-extract-plugin\nexport default {\"block\":\"ForgotPasswordForm_block__d7+WJ\",\"form\":\"ForgotPasswordForm_form__ztdlt\",\"text\":\"ForgotPasswordForm_text__x7KMY\",\"status\":\"ForgotPasswordForm_status__hXuPA\",\"error\":\"ForgotPasswordForm_error__ZT9jC\",\"btn\":\"ForgotPasswordForm_btn__EZ6L-\",\"label\":\"ForgotPasswordForm_label__cdhNO\",\"formInput\":\"ForgotPasswordForm_formInput__K28es\",\"passInput\":\"ForgotPasswordForm_passInput__Kh3sS\",\"btnCont\":\"ForgotPasswordForm_btnCont__1xGiK\",\"passVisBtn\":\"ForgotPasswordForm_passVisBtn__LRrc5\",\"passBtnImg\":\"ForgotPasswordForm_passBtnImg__qnn7d\",\"errorMessage\":\"ForgotPasswordForm_errorMessage__cs7cj\"};","import s from './ForgotPasswordForm.module.css';\nimport eyeOpened from 'assets/icons/eye.svg';\nimport eyeClosed from 'assets/icons/eye-blocked.svg';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getEmailStatus, getKeyStatus } from 'redux/auth/auth-selector';\nconst ForgotPasswordForm = ({ handleSubmitEmail, handleSubmitKey, handleSubmitPassword }) => {\n  const emailStatus = useSelector(getEmailStatus);\n  const keyStatus = useSelector(getKeyStatus);\n\n  const [state, setState] = useState({\n    email: '',\n    key: '',\n    password: '',\n    repeatPassword: '',\n  });\n  const { email, key, password, repeatPassword } = state;\n  const [isPassShown, setIsPassShown] = useState(false);\n  const [isRepeatPassShown, setIsRepeatPassShown] = useState(false);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setState(prevState => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n  const onSubmitEmail = e => {\n    e.preventDefault();\n    handleSubmitEmail(email);\n  };\n  const onSubmitKey = e => {\n    e.preventDefault();\n    handleSubmitKey(key);\n  };\n  const onSubmitPassword = e => {\n    e.preventDefault();\n    handleSubmitPassword(password);\n  };\n\n  const checkKeyDisabled = key.length !== 36;\n  const checkEmail =\n    email.length >= 8 && email.split('').includes('@') & email.split('').includes('.');\n  const checkPassLength = password.length >= 8;\n  const checkRepeatPassLength = repeatPassword.length >= 8;\n  const samePassword =\n    keyStatus && checkPassLength && checkRepeatPassLength && password !== repeatPassword;\n  return (\n    <>\n      <div className={s.block}>\n        {!emailStatus && <p className={s.text}>The activation key will be send to your email</p>}\n        <form onSubmit={onSubmitEmail} className={s.form}>\n          <input\n            onChange={handleChange}\n            className={s.formInput}\n            id=\"email\"\n            type=\"text\"\n            name=\"email\"\n            value={email}\n            required\n            min-length=\"8\"\n            placeholder=\"Enter email of your account\"\n            title=\"Please enter valid email address, for example 'example@gmail.com'\"\n          />\n          <button type=\"submit\" disabled={!checkEmail} className={s.btn}>\n            Send key\n          </button>\n        </form>\n        {emailStatus && <p className={s.status}>The activation key sent to your email</p>}\n      </div>\n      {emailStatus && (\n        <div className={s.block}>\n          <form onSubmit={onSubmitKey} className={s.form}>\n            <input\n              onChange={handleChange}\n              className={s.formInput}\n              id=\"key\"\n              type=\"text\"\n              name=\"key\"\n              value={key}\n              required\n              title=\"Please enter activation key (36 symbols) \"\n              placeholder=\"Enter activation key from email message\"\n            />\n            <button type=\"submit\" disabled={checkKeyDisabled} className={s.btn}>\n              Check key\n            </button>\n          </form>\n          {keyStatus && <p className={s.status}>The activation key approved</p>}\n        </div>\n      )}\n      {keyStatus && (\n        <div className={s.block}>\n          <form onSubmit={onSubmitPassword} className={s.form}>\n            <label className={s.label} htmlFor=\"password\">\n              <input\n                onChange={handleChange}\n                id=\"password\"\n                name=\"password\"\n                value={password}\n                className={s.formInput + ' ' + s.passInput}\n                type={isPassShown ? 'text' : 'password'}\n                title=\"Please enter your new password. Minimum length 8 symbols\"\n                placeholder=\"New password *\"\n                min-length=\"8\"\n                required\n              />\n              <button\n                className={s.passVisBtn}\n                onClick={() => {\n                  setIsPassShown(!isPassShown);\n                }}\n                type=\"button\"\n              >\n                <img\n                  className={s.pswdBtnImg}\n                  src={isPassShown ? eyeOpened : eyeClosed}\n                  alt=\"Button show/hide password\"\n                />\n              </button>\n            </label>\n            <label className={s.label} htmlFor=\"repeatPassword\">\n              <input\n                onChange={handleChange}\n                id=\"repeatPassword\"\n                name=\"repeatPassword\"\n                value={repeatPassword}\n                className={s.formInput + ' ' + s.passInput}\n                type={isRepeatPassShown ? 'text' : 'password'}\n                title=\"Please repeat your new password. Minimum length 8 symbols\"\n                placeholder=\"Repeat new password *\"\n                min-length=\"8\"\n                required\n              />\n              <button\n                className={s.passVisBtn}\n                onClick={() => {\n                  setIsRepeatPassShown(!isRepeatPassShown);\n                }}\n                type=\"button\"\n              >\n                <img\n                  className={s.pswdBtnImg}\n                  src={isRepeatPassShown ? eyeOpened : eyeClosed}\n                  alt=\"Button show/hide password\"\n                />\n              </button>\n            </label>\n\n            <button type=\"submit\" disabled={samePassword} className={s.btn}>\n              Save password\n            </button>\n          </form>\n          {samePassword && <p className={s.error}>Passwords are not the same. Check it</p>}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ForgotPasswordForm;\n","import s from './ForgotPasswordPage.module.css';\nimport { ReactComponent as BackArrow } from 'assets/icons/back-arrow.svg';\nimport ForgotPasswordForm from 'components/ForgotPasswordForm/ForgotPasswordForm';\nimport { getLoadingStatus, gettEmailOnCheck, getPasswordStatus } from 'redux/auth/auth-selector';\nimport { useSelector } from 'react-redux';\nimport { Loader } from 'components';\nimport { useDispatch } from 'react-redux';\nimport { Link, Navigate } from 'react-router-dom';\nimport { getActivationKey, getKeyVerify, saveNewPassword } from 'redux/auth/auth-operations';\n\nconst ForgotPasswordPage = () => {\n  const passwordStatus = useSelector(getPasswordStatus);\n  const isLoading = useSelector(getLoadingStatus);\n  const emailOnCheck = useSelector(gettEmailOnCheck);\n\n  const dispatch = useDispatch();\n  const sendEmail = email => {\n    dispatch(getActivationKey(email));\n  };\n  const checkKeyStatus = key => {\n    dispatch(getKeyVerify(key));\n  };\n  const createNewPassword = password => {\n    dispatch(saveNewPassword({ password, email: emailOnCheck }));\n  };\n  return (\n    <main>\n      <div className={s.container}>\n        {isLoading ? (\n          <Loader />\n        ) : (\n          <>\n            <Link to=\"/login\">\n              <BackArrow className={s.icon} />\n            </Link>\n            <h3 className={s.title}>Forgot password</h3>\n            <ForgotPasswordForm\n              handleSubmitEmail={sendEmail}\n              handleSubmitKey={checkKeyStatus}\n              handleSubmitPassword={createNewPassword}\n            />\n          </>\n        )}\n      </div>\n      {passwordStatus && <Navigate to=\"/login\" />}\n    </main>\n  );\n};\n\nexport default ForgotPasswordPage;\n"],"names":["_ref","handleSubmitEmail","handleSubmitKey","handleSubmitPassword","emailStatus","useSelector","getEmailStatus","keyStatus","getKeyStatus","state","setState","useState","email","key","password","repeatPassword","isPassShown","setIsPassShown","isRepeatPassShown","setIsRepeatPassShown","handleChange","e","name","value","target","prevState","checkKeyDisabled","length","checkEmail","split","includes","checkPassLength","checkRepeatPassLength","samePassword","_jsxs","_Fragment","children","className","s","block","_jsx","text","onSubmit","preventDefault","form","onChange","formInput","id","type","required","placeholder","title","disabled","btn","status","label","htmlFor","passInput","passVisBtn","onClick","pswdBtnImg","src","eyeOpened","eyeClosed","alt","error","ForgotPasswordPage","passwordStatus","getPasswordStatus","isLoading","getLoadingStatus","emailOnCheck","gettEmailOnCheck","dispatch","useDispatch","Loader","Link","to","BackArrow","ForgotPasswordForm","getActivationKey","getKeyVerify","saveNewPassword","Navigate"],"sourceRoot":""}